{"ast":null,"code":"import { baseMapAntwerp, baseMapWorldGray } from '@acpaas-ui/ngx-leaflet';\nimport { EventEmitter, SimpleChanges } from '@angular/core';\nimport { forkJoin, from, of, Subject } from 'rxjs';\nimport { combineAll, map, take, takeUntil, tap } from 'rxjs/operators';\nimport { isEqual } from 'lodash-es';\nimport { LocationViewerMap } from '../classes/location-viewer-map';\nimport { LayerService } from '../services/layer.service';\nimport { LocationViewerMapService } from '../services/location-viewer-map.service';\nimport { MapServerService } from '../services/mapserver.service';\nimport area from '@turf/area';\nimport { DrawEvents, InteractionEvents, RasterEvents } from '../types/leaflet.types';\nimport { GeoApiService } from '../services/geoapi.service';\nimport { Shapes } from '../types/geoman/geoman.types';\nimport { ButtonActions } from '../types/button-actions.enum';\nimport { LayerTypes } from '../types/layer-types.enum';\nimport { LocationViewerHelper } from '../services/location-viewer.helper';\nimport { LeafletTileLayerType } from '../types/leaflet-tile-layer.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/location-viewer-map.service\";\nimport * as i2 from \"../services/layer.service\";\nimport * as i3 from \"../services/mapserver.service\";\nimport * as i4 from \"../services/geoapi.service\";\nimport * as i5 from \"../services/location-viewer.helper\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@acpaas-ui/ngx-icon\";\nimport * as i9 from \"@acpaas-ui/ngx-leaflet\";\nimport * as i10 from \"./layer-management/layer-management.component\";\nfunction NgxLocationViewerComponent_div_1_aui_layer_management_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"aui-layer-management\", 21);\n    i0.ɵɵlistener(\"layerVisibilityChange\", function NgxLocationViewerComponent_div_1_aui_layer_management_6_Template_aui_layer_management_layerVisibilityChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.handleLayerVisibilityChange($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"supportingLayers\", ctx_r6.supportingLayers)(\"operationalLayer\", ctx_r6.operationalLayer);\n  }\n}\nfunction NgxLocationViewerComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"div\", 16)(2, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function NgxLocationViewerComponent_div_1_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.toggleSidebar());\n    });\n    i0.ɵɵelement(3, \"aui-icon\", 18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 19);\n    i0.ɵɵprojection(5, 4);\n    i0.ɵɵtemplate(6, NgxLocationViewerComponent_div_1_aui_layer_management_6_Template, 1, 2, \"aui-layer-management\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showLayerManagement);\n  }\n}\nfunction NgxLocationViewerComponent_button_3_aui_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"aui-icon\", 25);\n  }\n}\nfunction NgxLocationViewerComponent_button_3_aui_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"aui-icon\", 26);\n  }\n}\nfunction NgxLocationViewerComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function NgxLocationViewerComponent_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.toggleSidebar());\n    });\n    i0.ɵɵtemplate(1, NgxLocationViewerComponent_button_3_aui_icon_1_Template, 1, 0, \"aui-icon\", 23);\n    i0.ɵɵtemplate(2, NgxLocationViewerComponent_button_3_aui_icon_2_Template, 1, 0, \"aui-icon\", 24);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"title\", ctx_r1.showSidebar ? ctx_r1.translations.closeSidebar : ctx_r1.translations.openSidebar);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.showSidebar ? ctx_r1.translations.closeSidebar : ctx_r1.translations.openSidebar);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showSidebar);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.showSidebar);\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"a-button\": a0,\n    \"a-button-outline\": a1\n  };\n};\nfunction NgxLocationViewerComponent_div_5_div_3_ng_container_5_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function NgxLocationViewerComponent_div_5_div_3_ng_container_5_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r20.activeButtonChange(ctx_r20.buttonActions.selectZone));\n    });\n    i0.ɵɵelement(1, \"aui-icon\", 36);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c0, ctx_r19.currentButton !== ctx_r19.buttonActions.selectZone, ctx_r19.currentButton === ctx_r19.buttonActions.selectZone))(\"title\", ctx_r19.translations.selectFilterLayer);\n    i0.ɵɵattribute(\"aria-label\", ctx_r19.translations.selectFilterLayer);\n  }\n}\nfunction NgxLocationViewerComponent_div_5_div_3_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NgxLocationViewerComponent_div_5_div_3_ng_container_5_button_1_Template, 2, 6, \"button\", 34);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const availableFilterLayers_r18 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (availableFilterLayers_r18 == null ? null : availableFilterLayers_r18.length) > 0);\n  }\n}\nfunction NgxLocationViewerComponent_div_5_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function NgxLocationViewerComponent_div_5_div_3_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.activeButtonChange(ctx_r22.buttonActions.selectRectangle));\n    });\n    i0.ɵɵelement(2, \"aui-icon\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function NgxLocationViewerComponent_div_5_div_3_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r24.activeButtonChange(ctx_r24.buttonActions.selectPolygon));\n    });\n    i0.ɵɵelement(4, \"aui-icon\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, NgxLocationViewerComponent_div_5_div_3_ng_container_5_Template, 2, 1, \"ng-container\", 30);\n    i0.ɵɵpipe(6, \"async\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(9, _c0, ctx_r15.currentButton !== ctx_r15.buttonActions.selectRectangle, ctx_r15.currentButton === ctx_r15.buttonActions.selectRectangle))(\"title\", ctx_r15.translations.selectRectangle);\n    i0.ɵɵattribute(\"aria-label\", ctx_r15.translations.selectRectangle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(12, _c0, ctx_r15.currentButton !== ctx_r15.buttonActions.selectPolygon, ctx_r15.currentButton === ctx_r15.buttonActions.selectPolygon))(\"title\", ctx_r15.translations.selectPolygon);\n    i0.ɵɵattribute(\"aria-label\", ctx_r15.translations.selectPolygon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(6, 7, ctx_r15.filterLayers$));\n  }\n}\nfunction NgxLocationViewerComponent_div_5_ng_container_5_div_1_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"option\", 43);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const filterLayer_r29 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngValue\", filterLayer_r29);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(filterLayer_r29.name);\n  }\n}\nfunction NgxLocationViewerComponent_div_5_ng_container_5_div_1_aui_icon_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"aui-icon\", 44);\n  }\n}\nfunction NgxLocationViewerComponent_div_5_ng_container_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 38)(1, \"select\", 39);\n    i0.ɵɵlistener(\"ngModelChange\", function NgxLocationViewerComponent_div_5_ng_container_5_div_1_Template_select_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r30.currentFilterLayer = $event);\n    })(\"change\", function NgxLocationViewerComponent_div_5_ng_container_5_div_1_Template_select_change_1_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r32 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r32.onChangeFilterLayer());\n    });\n    i0.ɵɵelementStart(2, \"option\", 40);\n    i0.ɵɵtext(3, \"Kies filterlaag\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, NgxLocationViewerComponent_div_5_ng_container_5_div_1_ng_container_4_Template, 3, 2, \"ng-container\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, NgxLocationViewerComponent_div_5_ng_container_5_div_1_aui_icon_5_Template, 1, 0, \"aui-icon\", 42);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const availableFilterLayers_r25 = i0.ɵɵnextContext().ngIf;\n    const ctx_r26 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r26.currentFilterLayer);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngValue\", undefined);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", availableFilterLayers_r25);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r26.currentButton === ctx_r26.buttonActions.selectZone && availableFilterLayers_r25.length > 1);\n  }\n}\nfunction NgxLocationViewerComponent_div_5_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NgxLocationViewerComponent_div_5_ng_container_5_div_1_Template, 6, 4, \"div\", 37);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const availableFilterLayers_r25 = ctx.ngIf;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r16.currentButton === ctx_r16.buttonActions.selectZone && (availableFilterLayers_r25 == null ? null : availableFilterLayers_r25.length) > 1);\n  }\n}\nfunction NgxLocationViewerComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function NgxLocationViewerComponent_div_5_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r34.activeButtonChange(ctx_r34.buttonActions.select));\n    });\n    i0.ɵɵelement(2, \"aui-icon\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, NgxLocationViewerComponent_div_5_div_3_Template, 7, 15, \"div\", 30);\n    i0.ɵɵelementStart(4, \"div\", 31);\n    i0.ɵɵtemplate(5, NgxLocationViewerComponent_div_5_ng_container_5_Template, 2, 1, \"ng-container\", 30);\n    i0.ɵɵpipe(6, \"async\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(7, _c0, !ctx_r2.currentButton.startsWith(ctx_r2.buttonActions.select), ctx_r2.currentButton.startsWith(ctx_r2.buttonActions.select)))(\"title\", ctx_r2.translations.select);\n    i0.ɵɵattribute(\"aria-label\", ctx_r2.translations.select);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.currentButton.startsWith(ctx_r2.buttonActions.select));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(6, 5, ctx_r2.filterLayers$));\n  }\n}\nfunction NgxLocationViewerComponent_div_6_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function NgxLocationViewerComponent_div_6_div_3_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r38);\n      const ctx_r37 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r37.activeButtonChange(ctx_r37.buttonActions.distance));\n    });\n    i0.ɵɵelement(2, \"aui-icon\", 46);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function NgxLocationViewerComponent_div_6_div_3_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r38);\n      const ctx_r39 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r39.activeButtonChange(ctx_r39.buttonActions.area));\n    });\n    i0.ɵɵelement(4, \"aui-icon\", 47);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r36 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(6, _c0, ctx_r36.currentButton !== ctx_r36.buttonActions.distance, ctx_r36.currentButton === ctx_r36.buttonActions.distance))(\"title\", ctx_r36.translations.measureDistance);\n    i0.ɵɵattribute(\"aria-label\", ctx_r36.translations.measureDistance);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(9, _c0, ctx_r36.currentButton !== ctx_r36.buttonActions.area, ctx_r36.currentButton === ctx_r36.buttonActions.area))(\"title\", ctx_r36.translations.measureArea);\n    i0.ɵɵattribute(\"aria-label\", ctx_r36.translations.measureArea);\n  }\n}\nfunction NgxLocationViewerComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r41 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function NgxLocationViewerComponent_div_6_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r40 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r40.activeButtonChange(ctx_r40.buttonActions.measurement));\n    });\n    i0.ɵɵelement(2, \"aui-icon\", 45);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, NgxLocationViewerComponent_div_6_div_3_Template, 5, 12, \"div\", 30);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(4, _c0, !ctx_r3.currentButton.startsWith(ctx_r3.buttonActions.measurement), ctx_r3.currentButton.startsWith(ctx_r3.buttonActions.measurement)))(\"title\", ctx_r3.translations.measure);\n    i0.ɵɵattribute(\"aria-label\", ctx_r3.translations.measure);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.currentButton.startsWith(ctx_r3.buttonActions.measurement));\n  }\n}\nfunction NgxLocationViewerComponent_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r43 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function NgxLocationViewerComponent_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r43);\n      const ctx_r42 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r42.activeButtonChange(ctx_r42.buttonActions.whatishere));\n    });\n    i0.ɵɵelement(1, \"aui-icon\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c0, ctx_r4.currentButton !== ctx_r4.buttonActions.whatishere, ctx_r4.currentButton === ctx_r4.buttonActions.whatishere))(\"title\", ctx_r4.translations.whatIsHere);\n    i0.ɵɵattribute(\"aria-label\", ctx_r4.translations.whatIsHere);\n  }\n}\nfunction NgxLocationViewerComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r45 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 49)(1, \"button\", 50);\n    i0.ɵɵlistener(\"click\", function NgxLocationViewerComponent_div_16_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r45);\n      const ctx_r44 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r44.toggleTileLayer());\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 51);\n    i0.ɵɵlistener(\"click\", function NgxLocationViewerComponent_div_16_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r45);\n      const ctx_r46 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r46.toggleTileLayer(true));\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r5.isDefaultTileLayer);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.defaultTileLayerLabel, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r5.isCustomTileLayer);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.tileLayer.buttonLabel, \" \");\n  }\n}\nconst _c1 = [[[\"\", \"controls\", \"\", \"top\", \"\", \"left\", \"\"]], [[\"\", \"controls\", \"\", \"bottom\", \"\", \"left\", \"\"]], [[\"\", \"controls\", \"\", \"bottom\", \"\", \"right\", \"\"]], [[\"\", \"controls\", \"\", \"top\", \"\", \"right\", \"\"]], \"*\"];\nconst _c2 = [\"[controls][top][left]\", \"[controls][bottom][left]\", \"[controls][bottom][right]\", \"[controls][top][right]\", \"*\"];\nexport let NgxLocationViewerComponent = /*#__PURE__*/(() => {\n  class NgxLocationViewerComponent {\n    /**\n     * Check if current tile layer is the default one.\n     */\n    get isDefaultTileLayer() {\n      return this.tileLayerType === LeafletTileLayerType.DEFAULT;\n    }\n    /**\n     * Check if current tile layer is user defined.\n     */\n    get isCustomTileLayer() {\n      return this.tileLayerType === LeafletTileLayerType.CUSTOM;\n    }\n    constructor(mapService, layerService, mapserverService, geoApiService, locationViewerHelper) {\n      this.mapService = mapService;\n      this.layerService = layerService;\n      this.mapserverService = mapserverService;\n      this.geoApiService = geoApiService;\n      this.locationViewerHelper = locationViewerHelper;\n      /* The default zoom level on map load. */\n      this.defaultZoom = 14;\n      /* The initial map center on load. */\n      this.mapCenter = [51.215, 4.425];\n      /* Shows button to open sidebar if true. A sidebar can contain any additional info you like. */\n      this.hasSidebar = false;\n      /* If hasSidebar is true this will show whether the sidebar should be visible from the start */\n      this.showSidebar = false;\n      /* Shows layermangement inside the sidebar. Layermanagement is used to add or remove featurelayers. */\n      this.showLayerManagement = true;\n      /* Show selection tools */\n      this.showSelectionTools = true;\n      /* Show measure tools */\n      this.showMeasureTools = true;\n      /* show whatishere button */\n      this.showWhatIsHereButton = true;\n      /* Default tile layer button label */\n      this.defaultTileLayerLabel = 'Kaart';\n      /**\n       * The zoom level when a marker is selected.\n       * If null the zoomlevel won't change after marker selection.\n       */\n      this.zoomOnMarkerSelect = 16;\n      /* */\n      this.translations = {\n        closeSidebar: 'Sluit zijbalk',\n        openSidebar: 'Open zijbalk',\n        select: 'Selecteren',\n        selectRectangle: 'Selecteer met een rechthoek',\n        selectPolygon: 'Selecteer met een veelhoek',\n        selectFilterLayer: 'Selecteer met filterlaag',\n        measure: 'Meten',\n        measureArea: 'Meten oppervlakte en omtrek',\n        measureDistance: 'Meten afstand',\n        whatIsHere: 'Wat is hier',\n        zoomIn: 'Zoom in',\n        zoomOut: 'Zoom uit'\n      };\n      /* HasSideBar change */\n      this.hasSidebarChange = new EventEmitter();\n      /* AddPolygon event */\n      this.addPolygon = new EventEmitter();\n      /* AddLine event */\n      this.addLine = new EventEmitter();\n      /* EditFeature event */\n      this.editFeature = new EventEmitter();\n      /* Operational layer filtered: fired when using selection tools rectangle/polygon, using filter layer or clicking on marker of operational layer*/\n      this.filteredResult = new EventEmitter();\n      /* Operational layer clicked: fired when clicking on marker of operational layer */\n      this.markerClicked = new EventEmitter();\n      this.buttonActions = ButtonActions;\n      /* Current tile layer type default or custom */\n      this.tileLayerType = LeafletTileLayerType.DEFAULT;\n      // Selected button\n      this.currentButton = '';\n      this.destroyed$ = new Subject();\n      /* Current active tile layers */\n      this.activeTileLayers = [];\n    }\n    ngOnInit() {\n      this.initLocationViewer();\n    }\n    ngOnChanges(changes) {\n      // tslint:disable-next-line: forin\n      for (const propName in changes) {\n        const change = changes[propName];\n        // only handle changes after first cycle, first cycle need to wait for leafletmap init, check if value changes (not the reference)\n        if (!change.firstChange && !isEqual(change.previousValue, change.currentValue)) {\n          switch (propName) {\n            case 'supportingLayerOptions':\n              this.initiateSupportingLayer();\n              break;\n            case 'operationalLayerOptions':\n              this.initiateOperationalLayer();\n              break;\n            case 'filterLayers':\n              this.initiateFilterLayers();\n              break;\n            default:\n              break;\n          }\n        }\n      }\n    }\n    ngOnDestroy() {\n      this.destroyed$.next(true);\n      this.destroyed$.complete();\n    }\n    /**\n     * Zooms the map in\n     */\n    zoomIn() {\n      this.leafletMap.zoomIn();\n    }\n    /**\n     * Zooms the map out\n     */\n    zoomOut() {\n      this.leafletMap.zoomOut();\n    }\n    toggleSidebar() {\n      this.showSidebar = !this.showSidebar;\n      this.hasSidebarChange.emit(this.showSidebar);\n      // recalculates leaflet map size\n      setTimeout(() => {\n        this.leafletMap.map.invalidateSize();\n      });\n    }\n    activeButtonChange(action) {\n      switch (this.currentButton) {\n        case ButtonActions.whatishere:\n          this.leafletMap.map.pm.disableDraw(Shapes.Marker);\n          break;\n        case ButtonActions.distance:\n          this.leafletMap.map.pm.disableDraw(Shapes.Line);\n          break;\n        case ButtonActions.area:\n        case ButtonActions.selectPolygon:\n          this.leafletMap.map.pm.disableDraw(Shapes.Polygon);\n          break;\n        case ButtonActions.selectRectangle:\n          this.leafletMap.map.pm.disableDraw(Shapes.Rectangle);\n          break;\n        case ButtonActions.selectZone:\n          this.leafletMap.setVisibilityFilterLayer(false);\n          break;\n      }\n      // if the button action is the same as currentButton reset button\n      if (this.currentButton === action) {\n        this.currentButton = '';\n        return;\n      }\n      this.currentButton = action;\n      switch (action) {\n        case ButtonActions.whatishere:\n          this.leafletMap.map.pm.enableDraw(Shapes.Marker);\n          break;\n        case ButtonActions.distance:\n          this.leafletMap.map.pm.enableDraw(Shapes.Line);\n          break;\n        case ButtonActions.area:\n        case ButtonActions.selectPolygon:\n          this.leafletMap.map.pm.enableDraw(Shapes.Polygon);\n          break;\n        case ButtonActions.selectRectangle:\n          this.leafletMap.map.pm.enableDraw(Shapes.Rectangle);\n          break;\n        case ButtonActions.selectZone:\n          this.leafletMap.setVisibilityFilterLayer(true);\n          break;\n      }\n    }\n    /**\n     * Toggle tile layer when a custom tile layer is provided\n     */\n    toggleTileLayer(custom = false) {\n      this.resetCurrentTileLayers();\n      this.tileLayerType = custom ? LeafletTileLayerType.CUSTOM : LeafletTileLayerType.DEFAULT;\n      if (custom) {\n        this.activeTileLayers.push(this.leafletMap.addTileLayer(this.tileLayer.layer));\n      } else {\n        this.activeTileLayers.push(this.leafletMap.addTileLayer(baseMapWorldGray));\n        this.activeTileLayers.push(this.leafletMap.addTileLayer(baseMapAntwerp));\n      }\n    }\n    /**\n     * Handle change select-filterlayer\n     */\n    onChangeFilterLayer() {\n      if (this.locationViewerHelper.isValidMapServer(this.currentFilterLayer.url)) {\n        this.leafletMap.addFilterLayer(this.currentFilterLayer);\n        this.leafletMap.setVisibilityFilterLayer(true);\n      }\n    }\n    /**\n     * Handles layerchange\n     * @param layerType\n     */\n    handleLayerVisibilityChange(layerType) {\n      switch (layerType) {\n        case LayerTypes.supporting:\n          const ids = this.layerService.getVisibleLayerIds(this.supportingLayers);\n          this.leafletMap.setVisibleLayersSupportingLayer(ids);\n          break;\n        case LayerTypes.operational:\n          this.leafletMap.setVisibilityOperationalLayer(this.operationalLayer.visible);\n          break;\n      }\n    }\n    /**\n     * Register operational layer click event\n     */\n    registerOperationalLayerClickEvent() {\n      // listen for events on operational layer\n      if (this.leafletMap.operationalLayer) {\n        this.leafletMap.operationalLayer.on(InteractionEvents.click, event => {\n          //emit the event \n          this.markerClicked.emit(event);\n          // if custommarker return data under options object\n          if (this.customOperationalLayer) {\n            const latLng = event.layer.getLatLng();\n            let marker = {\n              coordinate: {\n                lat: latLng.lat,\n                lon: latLng.lng\n              },\n              data: event.layer.options.data,\n              icon: ''\n            };\n            this.filteredResult.emit([marker]);\n          } else {\n            this.filteredResult.emit([event.layer.feature.properties]);\n          }\n          // Centers map on marker coordinates and sets view level to zoomOnMarkerSelect\n          if (this.zoomOnMarkerSelect) {\n            this.leafletMap.setView(event.latlng, this.zoomOnMarkerSelect);\n          }\n        });\n      }\n    }\n    /**\n     * Resets the current tile layers\n     */\n    resetCurrentTileLayers() {\n      if (this.activeTileLayers.length > 0) {\n        this.activeTileLayers.map(layer => {\n          this.leafletMap.removeLayer(layer);\n        });\n      }\n      this.activeTileLayers = [];\n    }\n    initLocationViewer() {\n      if (!this.leafletMap) {\n        this.leafletMap = new LocationViewerMap({\n          zoom: this.defaultZoom,\n          center: this.mapCenter,\n          onAddPolygon: layer => {\n            this.addPolygon.emit(layer);\n          },\n          onAddLine: layer => {\n            this.addLine.emit(layer);\n          },\n          onEditFeature: feature => {\n            this.editFeature.emit(feature);\n          }\n        }, this.mapService);\n      }\n      this.leafletMap.onInit.subscribe(() => {\n        this.activeTileLayers.push(this.leafletMap.addTileLayer(baseMapWorldGray));\n        this.activeTileLayers.push(this.leafletMap.addTileLayer(baseMapAntwerp));\n        // sets geoman language to nl (tooltips for drawing)\n        this.leafletMap.map.pm.setLang('nl');\n        this.initiateSupportingLayer();\n        this.initiateOperationalLayer();\n        this.initiateFilterLayers();\n        this.initiateEvents();\n        // set hasSidebar true if showlayermanagement is true because this is inside the sidebar\n        if (this.showLayerManagement && !this.hasSidebar) {\n          this.hasSidebar = true;\n        }\n      });\n    }\n    initiateSupportingLayer() {\n      if (this.supportingLayerOptions && this.locationViewerHelper.isValidMapServer(this.supportingLayerOptions.url)) {\n        forkJoin([this.mapserverService.getMapserverInfo(this.supportingLayerOptions.url), this.mapserverService.getMapserverLegend(this.supportingLayerOptions.url)]).pipe(take(1)).subscribe(([info, legend]) => {\n          this.supportingLayers = this.layerService.buildSupportingLayersFromInfoAndLegend(info, legend, this.supportingLayerOptions.layerIds, this.supportingLayerOptions.visible);\n          const ids = this.layerService.getVisibleLayerIds(this.supportingLayers);\n          const layer = this.leafletMap.addSupportingLayers(this.supportingLayerOptions.url, ids);\n          layer.on(RasterEvents.loading, () => {\n            this.supportingLayers.forEach(x => x.isLoading = true);\n          });\n          layer.on(RasterEvents.load, () => {\n            this.supportingLayers.forEach(x => x.isLoading = false);\n          });\n        });\n      }\n    }\n    initiateOperationalLayer() {\n      if (this.operationalLayerOptions) {\n        //check if required settings for esri feature layer are provided\n        if (this.locationViewerHelper.isValidOperationalFeatureLayerConfiguration(this.operationalLayerOptions)) {\n          forkJoin([this.mapserverService.getMapserverLayerInfo(this.operationalLayerOptions.url, this.operationalLayerOptions.layerId), this.mapserverService.getMapserverLegend(this.operationalLayerOptions.url)]).pipe(take(1)).subscribe(([layerInfo, legend]) => {\n            this.operationalLayer = this.layerService.getLayerFromLayerInfo(layerInfo, legend);\n            this.leafletMap.addOperationalLayer(this.operationalLayerOptions, this.operationalLayer, this.operationalLayerOptions.tooltipField ? this.operationalLayerOptions.tooltipField : layerInfo.displayField);\n            this.customOperationalLayer = false;\n            this.registerOperationalLayerClickEvent();\n          });\n        } else if (this.operationalLayerOptions.markers && this.operationalLayerOptions.markers.length > 0 && this.operationalLayerOptions.name && this.operationalLayerOptions.isVisible) {\n          this.leafletMap.addOperationalMarkers(this.operationalLayerOptions.markers, this.operationalLayerOptions.enableClustering);\n          this.operationalLayer = {\n            name: this.operationalLayerOptions.name,\n            visible: this.operationalLayerOptions.isVisible\n          };\n          this.customOperationalLayer = true;\n          this.registerOperationalLayerClickEvent();\n        } else {\n          throw new Error('Invalid operationalLayerOptions! Check readme for examples.');\n        }\n      }\n    }\n    initiateFilterLayers() {\n      // if no default data is provided fetch layer data from mapserver\n      if (this.filterLayers) {\n        this.leafletMap.setVisibilityFilterLayer(false);\n        this.filterLayers$ = from(this.filterLayers).pipe(map(layer => {\n          if (layer.name == null || layer.popupLabel == null || layer.propertyToDisplay == null) {\n            return this.mapserverService.getMapserverLayerInfo(layer.url, layer.layerId).pipe(map(layerInfo => {\n              let filterLayer = layer;\n              filterLayer.name = filterLayer.name ? filterLayer.name : layerInfo.name;\n              filterLayer.popupLabel = filterLayer.popupLabel ? filterLayer.popupLabel : layerInfo.displayField;\n              filterLayer.propertyToDisplay = filterLayer.propertyToDisplay ? filterLayer.propertyToDisplay : layerInfo.displayField;\n              return filterLayer;\n            }));\n          } else {\n            return of(layer);\n          }\n        }), combineAll(), tap(filterLayers => {\n          if (filterLayers && filterLayers.length == 1 && this.locationViewerHelper.isValidMapServer(filterLayers[0].url)) {\n            this.leafletMap.addFilterLayer(filterLayers[0]);\n          }\n        }));\n      }\n      //register on filterlayer click\n      this.leafletMap.filterLayerClicked.pipe(takeUntil(this.destroyed$)).subscribe(x => {\n        this.filterOperationalLayer(x.target.feature);\n      });\n    }\n    initiateEvents() {\n      this.leafletMap.map.on(DrawEvents.create, e => {\n        switch (e.shape) {\n          case Shapes.Line:\n            {\n              const distance = this.locationViewerHelper.calculateDistance(e.layer.editing.latlngs[0]);\n              const content = this.locationViewerHelper.getDistancePopupContent(distance);\n              this.leafletMap.addPopupToLayer(e.layer, content, true);\n              break;\n            }\n          case Shapes.Polygon:\n            {\n              switch (this.currentButton) {\n                case ButtonActions.area:\n                  const perimeter = this.locationViewerHelper.calculatePerimeter(e.layer.editing.latlngs[0][0]);\n                  const calculatedArea = area(e.layer.toGeoJSON());\n                  const content = this.locationViewerHelper.getAreaPopupContent(perimeter, calculatedArea);\n                  this.leafletMap.addPopupToLayer(e.layer, content, true);\n                  break;\n                case this.buttonActions.selectPolygon:\n                  this.filterOperationalLayer(e.layer.toGeoJSON());\n                  this.leafletMap.map.removeLayer(e.layer);\n                  break;\n                default:\n                  break;\n              }\n              break;\n            }\n          case Shapes.Rectangle:\n            {\n              this.filterOperationalLayer(e.layer.toGeoJSON());\n              this.leafletMap.map.removeLayer(e.layer);\n              break;\n            }\n          case Shapes.Marker:\n            {\n              this.geoApiService.getAddressesByCoordinates(this.geoApiBaseUrl, e.marker.getLatLng()).pipe(take(1)).subscribe(x => {\n                if (x.addressDetail.length > 0) {\n                  const address = x.addressDetail[0];\n                  const marker = this.leafletMap.addHtmlMarker(address.addressPosition.wgs84, this.leafletMap.getHtmlMarker('#000000', 'ai-location-target-1', '16px', {\n                    top: '-3px',\n                    left: '2px'\n                  }));\n                  const content = this.locationViewerHelper.getWhatisherePopupContent(address);\n                  this.leafletMap.addPopupToLayer(e.marker, content, true, marker);\n                } else {\n                  this.leafletMap.addPopupToLayer(e.marker, '<p>Geen adres gevonden.</p>', true);\n                }\n              });\n            }\n        }\n        // after finished intake reset current button\n        this.activeButtonChange(ButtonActions.none);\n      });\n    }\n    filterOperationalLayer(feature) {\n      if (this.operationalLayerOptions) {\n        if (this.locationViewerHelper.isValidOperationalFeatureLayerConfiguration(this.operationalLayerOptions)) {\n          this.geoApiService.getGeofeaturesByGeometry(this.geoApiBaseUrl, this.operationalLayerOptions.url, [this.operationalLayerOptions.layerId], feature).pipe(take(1)).subscribe(geoFeatureRespone => {\n            this.filteredResult.emit(geoFeatureRespone.results);\n          });\n        } else if (this.locationViewerHelper.isValidOpertionalMarkerLayerConfiguration(this.operationalLayerOptions)) {\n          const filteredMarkers = this.locationViewerHelper.filterOperationalMarkersByGeometries(this.operationalLayerOptions.markers, feature.geometry.coordinates);\n          this.filteredResult.emit(filteredMarkers);\n        }\n      }\n    }\n  }\n  NgxLocationViewerComponent.ɵfac = function NgxLocationViewerComponent_Factory(t) {\n    return new (t || NgxLocationViewerComponent)(i0.ɵɵdirectiveInject(i1.LocationViewerMapService), i0.ɵɵdirectiveInject(i2.LayerService), i0.ɵɵdirectiveInject(i3.MapServerService), i0.ɵɵdirectiveInject(i4.GeoApiService), i0.ɵɵdirectiveInject(i5.LocationViewerHelper));\n  };\n  NgxLocationViewerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NgxLocationViewerComponent,\n    selectors: [[\"aui-location-viewer\"]],\n    inputs: {\n      geoApiBaseUrl: \"geoApiBaseUrl\",\n      defaultZoom: \"defaultZoom\",\n      mapCenter: \"mapCenter\",\n      hasSidebar: \"hasSidebar\",\n      showSidebar: \"showSidebar\",\n      showLayerManagement: \"showLayerManagement\",\n      showSelectionTools: \"showSelectionTools\",\n      showMeasureTools: \"showMeasureTools\",\n      showWhatIsHereButton: \"showWhatIsHereButton\",\n      supportingLayerOptions: \"supportingLayerOptions\",\n      operationalLayerOptions: \"operationalLayerOptions\",\n      filterLayers: \"filterLayers\",\n      leafletMap: \"leafletMap\",\n      defaultTileLayerLabel: \"defaultTileLayerLabel\",\n      tileLayer: \"tileLayer\",\n      zoomOnMarkerSelect: \"zoomOnMarkerSelect\",\n      translations: \"translations\"\n    },\n    outputs: {\n      hasSidebarChange: \"hasSidebarChange\",\n      addPolygon: \"addPolygon\",\n      addLine: \"addLine\",\n      editFeature: \"editFeature\",\n      filteredResult: \"filteredResult\",\n      markerClicked: \"markerClicked\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c2,\n    decls: 21,\n    vars: 12,\n    consts: [[3, \"leafletMap\", \"hasSidebar\"], [\"class\", \"sidebar\", 4, \"ngIf\"], [\"controls\", \"\", \"top\", \"\", \"left\", \"\", 1, \"controls-top-left\"], [\"type\", \"button\", \"class\", \"a-button a-button--small has-icon a-button--block u-margin-bottom-xs\", \"name\", \"toggle-layermanagement\", 3, \"title\", \"click\", 4, \"ngIf\"], [1, \"m-button-group\", \"m-button-group--vertical\"], [\"class\", \"m-button-group m-button-group--horizontal\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"a-button--small has-icon\", 3, \"ngClass\", \"title\", \"click\", 4, \"ngIf\"], [\"controls\", \"\", \"bottom\", \"\", \"left\", \"\"], [\"type\", \"button\", 1, \"a-button\", \"a-button--small\", \"has-icon\", \"a-button--block\", \"button-zoom-in\", 3, \"title\", \"click\"], [\"name\", \"ai-add\"], [\"type\", \"button\", 1, \"a-button\", \"a-button--small\", \"has-icon\", \"a-button--block\", \"button-zoom-out\", 3, \"title\", \"click\"], [\"name\", \"ai-subtract\"], [\"class\", \"m-button-group map-layer-toggle u-margin-top-xs\", 4, \"ngIf\"], [\"controls\", \"\", \"bottom\", \"\", \"right\", \"\"], [\"controls\", \"\", \"top\", \"\", \"right\", \"\"], [1, \"sidebar\"], [1, \"sidebar__header\"], [\"aria-label\", \"Sluiten\", 1, \"a-button-transparent\", \"a-button--default\", \"has-icon\", \"sidebar__close-button\", 3, \"click\"], [\"name\", \"ai-close\"], [1, \"sidebar__content\"], [3, \"supportingLayers\", \"operationalLayer\", \"layerVisibilityChange\", 4, \"ngIf\"], [3, \"supportingLayers\", \"operationalLayer\", \"layerVisibilityChange\"], [\"type\", \"button\", \"name\", \"toggle-layermanagement\", 1, \"a-button\", \"a-button--small\", \"has-icon\", \"a-button--block\", \"u-margin-bottom-xs\", 3, \"title\", \"click\"], [\"name\", \"ai-arrow-button-left-1\", 4, \"ngIf\"], [\"name\", \"ai-arrow-button-right-1\", 4, \"ngIf\"], [\"name\", \"ai-arrow-button-left-1\"], [\"name\", \"ai-arrow-button-right-1\"], [1, \"m-button-group\", \"m-button-group--horizontal\"], [\"type\", \"button\", 1, \"a-button--small\", \"has-icon\", 3, \"ngClass\", \"title\", \"click\"], [\"name\", \"ai-cursor\"], [4, \"ngIf\"], [1, \"a-input\", \"a-input--small\", \"has-icon-right\", \"u-margin-left-xs\"], [\"name\", \"ai-vectors-anchor-square\"], [\"name\", \"ai-vectors-anchor-triangle\"], [\"type\", \"button\", \"class\", \"a-button a-button--small has-icon a-button--block\", 3, \"ngClass\", \"title\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"a-button\", \"a-button--small\", \"has-icon\", \"a-button--block\", 3, \"ngClass\", \"title\", \"click\"], [\"name\", \"ai-layers\"], [\"class\", \"a-input__wrapper\", 4, \"ngIf\"], [1, \"a-input__wrapper\"], [\"name\", \"select-filterLayer\", \"id\", \"select-filterLayer\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"disabled\", \"\", 3, \"ngValue\"], [4, \"ngFor\", \"ngForOf\"], [\"name\", \"ai-arrow-down-1\", 4, \"ngIf\"], [3, \"ngValue\"], [\"name\", \"ai-arrow-down-1\"], [\"name\", \"ai-ruler\"], [\"name\", \"ai-vectors-line-path\"], [\"name\", \"ai-vectors-anchor-rectangle\"], [\"name\", \"ai-pin\"], [1, \"m-button-group\", \"map-layer-toggle\", \"u-margin-top-xs\"], [\"type\", \"button\", \"aria-label\", \"Selecteer default basislaag\", 1, \"a-button\", \"a-button--small\", 3, \"disabled\", \"click\"], [\"type\", \"button\", \"aria-label\", \"Selecteer specifieke basislaag\", 1, \"a-button\", \"a-button--small\", 3, \"disabled\", \"click\"]],\n    template: function NgxLocationViewerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c1);\n        i0.ɵɵelementStart(0, \"aui-leaflet\", 0);\n        i0.ɵɵtemplate(1, NgxLocationViewerComponent_div_1_Template, 7, 1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtemplate(3, NgxLocationViewerComponent_button_3_Template, 3, 4, \"button\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵtemplate(5, NgxLocationViewerComponent_div_5_Template, 7, 10, \"div\", 5);\n        i0.ɵɵtemplate(6, NgxLocationViewerComponent_div_6_Template, 4, 7, \"div\", 5);\n        i0.ɵɵtemplate(7, NgxLocationViewerComponent_button_7_Template, 2, 6, \"button\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵprojection(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵprojection(10, 1);\n        i0.ɵɵelementStart(11, \"div\", 4)(12, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function NgxLocationViewerComponent_Template_button_click_12_listener() {\n          return ctx.zoomIn();\n        });\n        i0.ɵɵelement(13, \"aui-icon\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function NgxLocationViewerComponent_Template_button_click_14_listener() {\n          return ctx.zoomOut();\n        });\n        i0.ɵɵelement(15, \"aui-icon\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(16, NgxLocationViewerComponent_div_16_Template, 5, 4, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 13);\n        i0.ɵɵprojection(18, 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 14);\n        i0.ɵɵprojection(20, 3);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"leafletMap\", ctx.leafletMap)(\"hasSidebar\", ctx.showSidebar);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasSidebar && ctx.showSidebar);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasSidebar);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.leafletMap.operationalLayer && ctx.showSelectionTools);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMeasureTools);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showWhatIsHereButton);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"title\", ctx.translations.zoomIn);\n        i0.ɵɵattribute(\"aria-label\", ctx.translations.zoomIn);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"title\", ctx.translations.zoomOut);\n        i0.ɵɵattribute(\"aria-label\", ctx.translations.zoomOut);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.tileLayer);\n      }\n    },\n    dependencies: [i6.NgClass, i6.NgForOf, i6.NgIf, i7.NgSelectOption, i7.ɵNgSelectMultipleOption, i7.SelectControlValueAccessor, i7.NgControlStatus, i7.NgModel, i8.IconComponent, i9.LeafletComponent, i10.LayerManagementComponent, i6.AsyncPipe],\n    styles: [\"[_ngcontent-%COMP%]:root{--theme1-600: #002855;--theme1-500: #003865;--theme1-400: #0057b7;--theme1-300: #009cde;--theme1-200: #41b6e6;--theme1-100: #99d6ea;--theme1-075: #96b5e4;--theme1-050: #e0ebf6;--theme2-600: #7c2629;--theme2-500: #862633;--theme2-400: #cf0039;--theme2-300: #df4661;--theme2-200: #ffb1bb;--theme2-100: #f5dadf;--success-700: #004721;--success-600: #006e33;--success-500: #4c8d2b;--success-400: #6cc24a;--success-300: #97d700;--success-200: #bce194;--success-100: #d0debb;--success-050: #edf8e9;--warning-500: #8f3400;--warning-400: #ce4c00;--warning-050: #ffe4d6;--danger-600: #7c2629;--danger-500: #af272f;--danger-400: #e03c31;--danger-300: #e56a54;--danger-200: #e6baa8;--danger-100: #f3cfb3;--danger-050: #fbe8e6;--text-color: #000;--text-color-light: #6f6f6f;--text-color-xlight: #fff;--bg-color: #d8d8d8;--bg-color-light: #f3f3f3;--border-color: #949494;--overlay-color: rgba(0, 0, 0, .75);--box-shadow-color: rgba(20, 20, 20, .12);--state-info: var(--theme1-400);--state-success: var(--success-600);--state-warning: var(--warning-400);--state-danger: var(--danger-500);--state-disabled: #6f6f6f;--spacer: 1.5rem;--spacer-3xl: calc(var(--spacer) * 4);--spacer-xxl: calc(var(--spacer) * 2.5);--spacer-xl: calc(var(--spacer) * 2);--spacer-l: calc(var(--spacer) * 1.5);--spacer-s: calc(var(--spacer) / 1.5);--spacer-xs: calc(var(--spacer) / 2);--spacer-xxs: calc(var(--spacer) / 3);--spacer-3xs: calc(var(--spacer) / 6);--screen-xs: 30rem;--screen-s: 45rem;--screen-l: 62rem;--screen-xl: 75rem;--screen-xxl: calc(var(--screen-xl) + calc(var(--spacer-3xl) * 2) + calc(var(--spacer) * 2));--screen-xs-max: 44.9375rem;--screen-s-max: 61.9375rem;--screen-l-max: 74.9375rem;--screen-xl-max: 89.9375rem;--font-family-base: \\\"Sun Antwerpen\\\", sans-serif;--font-family-headings: \\\"Antwerpen Regular\\\", sans-serif;--font-family-monospace: \\\"Menlo\\\", \\\"Monaco\\\", \\\"Consolas\\\", \\\"Courier New\\\", monospace;--font-weight-light: 300;--font-weight-normal: 500;--font-weight-bold: 700;--font-weight-extra-bold: 800;--font-weight-h1: var(--font-weight-normal);--font-weight-h2: var(--font-weight-normal);--font-weight-h3: var(--font-weight-normal);--font-weight-h4: var(--font-weight-normal);--font-weight-h5: var(--font-weight-normal);--font-weight-h6: var(--font-weight-normal);--link-color: var(--theme1-400);--link-hover-color: var(--theme1-500);--border-radius: 0;--border-width: 1px;--animation-duration: .2s;--animation-easing: ease-in-out;--animation-normal: var(--animation-duration) var(--animation-easing);--box-shadow-bottom-left: calc(var(--spacer) / -2) calc(var(--spacer) / 2) 0 var(--box-shadow-color);--box-shadow-bottom-right: calc(var(--spacer) / 2) calc(var(--spacer) / 2) 0 var(--box-shadow-color);--box-shadow-upper-left: calc(var(--spacer) / -2) calc(var(--spacer) / -2) 0 var(--box-shadow-color);--box-shadow-upper-right: calc(var(--spacer) / 2) calc(var(--spacer) / -2) 0 var(--box-shadow-color);--box-shadow: var(--box-shadow-bottom-right);--shared-avatar-size-s: var(--spacer-l);--shared-avatar-size: var(--spacer-xl);--shared-avatar-size-l: var(--spacer-xxl);--shared-copyright-color: #fff;--shared-copyright-height: var(--spacer-l);--shared-header-height: var(--spacer-xl);--shared-slideshow-footer-color-light: #fff}  .whatishere-wrapper{overflow:hidden;width:17rem}  .whatishere-title{margin:.375rem 0}  .whatishere-content{display:grid;float:left;gap:0 .75rem;grid-template-columns:1fr 3fr;margin-top:.375rem;width:14rem}  .whatishere-type{width:3rem}  .whatishere-image{overflow:hidden}.m-button-group[_ngcontent-%COMP%]   .m-button-group[_ngcontent-%COMP%]{margin-bottom:-1px}.m-button-group[_ngcontent-%COMP%]   .a-button[_ngcontent-%COMP%], .m-button-group[_ngcontent-%COMP%]   .a-button-outline[_ngcontent-%COMP%], .m-button-group[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{margin-top:0}.sidebar__header[_ngcontent-%COMP%]{position:relative}.sidebar__header[_ngcontent-%COMP%]   .sidebar__close-button[_ngcontent-%COMP%]{position:absolute;right:-.75rem;top:-.75rem}\"]\n  });\n  return NgxLocationViewerComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}