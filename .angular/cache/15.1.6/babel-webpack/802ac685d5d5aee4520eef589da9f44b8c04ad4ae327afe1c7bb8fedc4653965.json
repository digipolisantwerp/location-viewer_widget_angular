{"ast":null,"code":"function BinarySearchIndex(values) {\n  this.values = [].concat(values || []);\n}\nBinarySearchIndex.prototype.query = function (value) {\n  var index = this.getIndex(value);\n  return this.values[index];\n};\nBinarySearchIndex.prototype.getIndex = function getIndex(value) {\n  if (this.dirty) {\n    this.sort();\n  }\n  var minIndex = 0;\n  var maxIndex = this.values.length - 1;\n  var currentIndex;\n  var currentElement;\n  while (minIndex <= maxIndex) {\n    currentIndex = (minIndex + maxIndex) / 2 | 0;\n    currentElement = this.values[Math.round(currentIndex)];\n    if (+currentElement.value < +value) {\n      minIndex = currentIndex + 1;\n    } else if (+currentElement.value > +value) {\n      maxIndex = currentIndex - 1;\n    } else {\n      return currentIndex;\n    }\n  }\n  return Math.abs(~maxIndex);\n};\nBinarySearchIndex.prototype.between = function between(start, end) {\n  var startIndex = this.getIndex(start);\n  var endIndex = this.getIndex(end);\n  if (startIndex === 0 && endIndex === 0) {\n    return [];\n  }\n  while (this.values[startIndex - 1] && this.values[startIndex - 1].value === start) {\n    startIndex--;\n  }\n  while (this.values[endIndex + 1] && this.values[endIndex + 1].value === end) {\n    endIndex++;\n  }\n  if (this.values[endIndex] && this.values[endIndex].value === end && this.values[endIndex + 1]) {\n    endIndex++;\n  }\n  return this.values.slice(startIndex, endIndex);\n};\nBinarySearchIndex.prototype.insert = function insert(item) {\n  this.values.splice(this.getIndex(item.value), 0, item);\n  return this;\n};\nBinarySearchIndex.prototype.bulkAdd = function bulkAdd(items, sort) {\n  this.values = this.values.concat([].concat(items || []));\n  if (sort) {\n    this.sort();\n  } else {\n    this.dirty = true;\n  }\n  return this;\n};\nBinarySearchIndex.prototype.sort = function sort() {\n  this.values.sort(function (a, b) {\n    return +b.value - +a.value;\n  }).reverse();\n  this.dirty = false;\n  return this;\n};\nexport default BinarySearchIndex;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}